(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var currentNumber = document.getElementById("tel");
var newNumber = "07-1111-1111";
var id = "UA-49112570-1";
console.log(ga.q[0][1]);

function changeTel() {
  if (id === ga.q[0][1]) {
    currentNumber.onclick = function () {
      currentNumber.setAttribute("href", "tel:0711111111");
      currentNumber.innerHTML = newNumber;
      var winheight, docheight, trackLength, throttlescroll;

      function getmeasurements() {
        winheight = window.innerHeight || (document.documentElement || document.body).clientHeight;
        docheight = getDocHeight();
        trackLength = docheight - winheight;
      }

      function getDocHeight() {
        var D = document;
        return Math.max(D.body.scrollHeight, D.documentElement.scrollHeight, D.body.offsetHeight, D.documentElement.offsetHeight, D.body.clientHeight, D.documentElement.clientHeight);
      }

      function amountscrolled() {
        var scrollTop = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop;
        var pctScrolled = Math.floor(scrollTop / trackLength * 100);
        console.log(pctScrolled + "% scrolled");
        document.cookie = 'ScrollTracking' + '=' + pctScrolled + "% scrolled";
      }

      getmeasurements();
      window.addEventListener("resize", function () {
        getmeasurements();
      }, false);
      window.addEventListener("scroll", amountscrolled());
    };
  }
}

changeTel();

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
